-- Eviline config for lualine
-- Author: shadmansaleh
-- Credit: glepnir
local lualine = require('lualine')

-- Color table for highlights using kanagawa-inspired cyberpunk theme
-- stylua: ignore
local colors = {
  bg       = '{{ .colors.base }}',     -- Dark base background
  fg       = '{{ .colors.text }}',     -- Main text color
  yellow   = '{{ .colors.yellow }}',   -- Warm yellow
  cyan     = '{{ .colors.sky }}',      -- Sky blue instead of harsh cyan
  darkblue = '{{ .colors.sapphire }}', -- Muted cyber blue
  green    = '{{ .colors.green }}',    -- Matrix green
  orange   = '{{ .colors.peach }}',    -- Warm cyber orange
  violet   = '{{ .colors.mauve }}',    -- Kanagawa purple
  magenta  = '{{ .colors.pink }}',     -- Soft cyber pink
  blue     = '{{ .colors.accent }}',   -- Primary blue accent
  red      = '{{ .colors.error }}',    -- Error red

  -- Additional colors for better theme integration
  surface  = '{{ .colors.surface0 }}', -- For subtle backgrounds
  subtext  = '{{ .colors.subtext1 }}', -- For muted text
  teal     = '{{ .colors.teal }}',     -- Kanagawa teal
}

local conditions = {
  buffer_not_empty = function()
    return vim.fn.empty(vim.fn.expand('%:t')) ~= 1
  end,
  hide_in_width = function()
    return vim.fn.winwidth(0) > 80
  end,
  check_git_workspace = function()
    local filepath = vim.fn.expand('%:p:h')
    local gitdir = vim.fn.finddir('.git', filepath .. ';')
    return gitdir and #gitdir > 0 and #gitdir < #filepath
  end,
}

-- Config
local config = {
  options = {
    disabled_filetypes = { 'packer', 'NvimTree', 'Lazy' },
    -- Disable sections and component separators
    component_separators = '',
    section_separators = '',
    theme = {
      -- We are going to use lualine_c an lualine_x as left and
      -- right section. Both are highlighted by c theme .  So we
      -- are just setting default looks o statusline
      normal = { c = { fg = colors.fg, bg = colors.bg } },
      inactive = { c = { fg = colors.subtext, bg = colors.bg } },
    },
  },
  sections = {
    -- these are to remove the defaults
    lualine_a = {},
    lualine_b = {},
    lualine_y = {},
    lualine_z = {},
    -- These will be filled later
    lualine_c = {},
    lualine_x = {},
  },
  inactive_sections = {
    -- these are to remove the defaults
    lualine_a = {},
    lualine_b = {},
    lualine_y = {},
    lualine_z = {},
    lualine_c = {},
    lualine_x = {},
  },
}

-- Inserts a component in lualine_c at left section
local function ins_left(component)
  table.insert(config.sections.lualine_c, component)
end

-- Inserts a component in lualine_x at right section
local function ins_right(component)
  table.insert(config.sections.lualine_x, component)
end

ins_left {
  function()
    return '☰'
  end,
  color = { fg = colors.blue }, -- Primary accent color
  padding = { left = 0, right = 1 },
}

ins_left {
  -- mode component
  function()
    return ''
  end,
  color = function()
    -- auto change color according to neovims mode with kanagawa-inspired colors
    local mode_color = {
      n = colors.blue,    -- Normal: blue accent
      i = colors.green,   -- Insert: green
      v = colors.magenta, -- Visual: pink
      [''] = colors.magenta,
      V = colors.magenta,
      c = colors.yellow, -- Command: yellow
      no = colors.red,
      s = colors.orange,
      S = colors.orange,
      [''] = colors.orange,
      ic = colors.yellow,
      R = colors.violet,
      Rv = colors.violet,
      cv = colors.red,
      ce = colors.red,
      r = colors.cyan,
      rm = colors.cyan,
      ['r?'] = colors.cyan,
      ['!'] = colors.red,
      t = colors.teal, -- Terminal: teal
    }
    return { fg = mode_color[vim.fn.mode()] }
  end,
  padding = { right = 1 },
}

ins_left {
  -- filesize component
  'filesize',
  cond = conditions.buffer_not_empty,
  color = { fg = colors.subtext },
}

ins_left {
  'filename',
  cond = conditions.buffer_not_empty,
  color = { fg = colors.cyan, gui = 'bold' }, -- Sky blue for filename
}

ins_left {
  'location',
  color = { fg = colors.subtext }
}

ins_left {
  'progress',
  color = { fg = colors.fg, gui = 'bold' }
}

ins_left {
  'diagnostics',
  sources = { 'nvim_diagnostic' },
  symbols = { error = ' ', warn = ' ', info = ' ' },
  diagnostics_color = {
    error = { fg = colors.red },
    warn = { fg = colors.yellow },
    info = { fg = colors.cyan },
  },
}

-- Insert mid section
ins_left {
  function()
    return '%='
  end,
}

ins_left {
  -- Lsp server name
  function()
    local msg = 'No Active Lsp'
    local buf_ft = vim.api.nvim_get_option_value('filetype', { buf = 0 })
    local clients = vim.lsp.get_clients()
    if next(clients) == nil then
      return msg
    end
    for _, client in ipairs(clients) do
      local filetypes = client.config.filetypes
      if filetypes and vim.fn.index(filetypes, buf_ft) ~= -1 then
        return client.name
      end
    end
    return msg
  end,
  icon = ' LSP:',
  color = { fg = colors.teal, gui = 'bold' }, -- Teal for LSP info
}

-- Add components to right sections
ins_right {
  'o:encoding',
  fmt = string.upper,
  cond = conditions.hide_in_width,
  color = { fg = colors.green, gui = 'bold' },
}

ins_right {
  'fileformat',
  fmt = string.upper,
  icons_enabled = false,
  color = { fg = colors.green, gui = 'bold' },
}

ins_right {
  'branch',
  icon = '',
  color = { fg = colors.violet, gui = 'bold' },
}

ins_right {
  'diff',
  symbols = { added = '+', modified = 'm', removed = '-' },
  diff_color = {
    added = { fg = colors.green },
    modified = { fg = colors.orange },
    removed = { fg = colors.red },
  },
  cond = conditions.hide_in_width,
}

-- ▊
ins_right {
  function()
    return '☰'
  end,
  color = { fg = colors.blue },
  padding = { left = 1 },
}

-- Now don't forget to initialize lualine
lualine.setup(config)
