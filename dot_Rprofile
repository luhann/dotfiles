# Safe require function to avoid errors when packages aren't available
safe_require = function(pkg) {
  if (!requireNamespace(pkg, quietly = TRUE)) {
    message(paste("Package", pkg, "not available. Some functionality may be limited."))
    return(FALSE)
  }
  TRUE
}


# Global options
options(
  repos = c(CRAN = "https://packagemanager.posit.co/cran/latest"),
  usethis.full_name = "Luke Hannan",
  max.print = 1000, # Limit console output
  warnPartialMatchDollar = TRUE, # Warn about partial $ matches
  warnPartialMatchArgs = TRUE, # Also warn about partial argument matches
  warnPartialMatchAttr = TRUE, # And partial attribute matches
  width = ifelse(interactive(), 120, 80), # Set width conditionally
  help_type = "html",
  # radian options
  radian.global_history_file = "~/.config/.radian_history",
  radian.history_size = 20000,
  radian.highlight_matching_bracket = TRUE,
  radian.completion_timeout = 0.05
)

# Interactive session options
if (interactive()) {
  # Code that will only run in interactive sessions goes here

  # Use functions from my package if available
  if (safe_require("lumisc")) {
    # This replaces the default quit with the quit without save from my package
    q = lumisc::q
    # adds view as an alias for View
    view = lumisc::view

    lumisc::set_startup_options()
  }

  # Add convenient alias
  rownames = row.names
}

if (interactive() && Sys.getenv("DISPLAY") != "") {
  grDevices::X11.options(family = "Iosevka", type = "cairo")
}

# VSCode R integration
if (interactive() && Sys.getenv("RSTUDIO") == "") {
  vscode_init_file = file.path(Sys.getenv(if (.Platform$OS.type == "windows") "USERPROFILE" else "HOME"), ".vscode-R", "init.R")
  if (file.exists(vscode_init_file)) {
    source(vscode_init_file)
  }
}
