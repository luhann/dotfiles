#!/usr/bin/env fish

# Function to check if device is LUKS encrypted
function is_luks_encrypted -a device
    cryptsetup isLuks $device 2>/dev/null
    return $status
end

# Function to handle errors
function error -a message
    echo "Error: $message" >&2
    exit 1
end

# Validate arguments
if test (count $argv) -lt 2
    error "Usage: $(status current-command) (open|close) /path/to/luks_file"
end

# Get arguments
set -l action $argv[1]
set -l luks_file $argv[2]

# Get name for mapped device
set -l luks_name (basename $luks_file .luks)

# Check if luks_file exists
if not test -f $luks_file
    error "LUKS file '$luks_file' does not exist."
end

# Get mount point directory (ensure it's in the home directory)
set -l mount_point "$HOME/$luks_name"

# Open or close LUKS device based on action
switch $action
    case "open"
        # Check if LUKS encrypted
        if not is_luks_encrypted $luks_file
            error "LUKS file '$luks_file' is not encrypted."
        end

        # Open LUKS device
        if not sudo cryptsetup open --type luks $luks_file $luks_name
            error "Failed to open LUKS device."
        end

        # Create mount point directory if it doesn't exist
        mkdir -p $mount_point 2>/dev/null || error "Failed to create mount point."

        # Mount the filesystem
        if not sudo mount /dev/mapper/$luks_name $mount_point
            sudo cryptsetup close $luks_name 2>/dev/null
            error "Failed to mount filesystem."
        end

        echo "LUKS device '$luks_file' opened and mounted at '$mount_point'."

    case "close"
        # Check if mount point exists
        if not test -d $mount_point
            error "Mount point '$mount_point' does not exist."
        end

        # Unmount the filesystem
        if not sudo umount $mount_point
            error "Failed to unmount filesystem."
        end

        # Close LUKS device
        if not sudo cryptsetup close $luks_name
            error "Failed to close LUKS device."
        end

        # Remove mount point directory
        rmdir $mount_point 2>/dev/null
        
        echo "LUKS device '$luks_file' closed."

    case "*"
        error "Invalid action. Please specify 'open' or 'close'."
end